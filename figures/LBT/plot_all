#!/usr/bin/env python3

from mpmath import polylog as Li



import numpy as np
import matplotlib.pyplot as plt
import h5py
import sys, glob
M = 1.3
def ff(l, sqrts):
	E = (sqrts+M*M/sqrts)/2.
	thetaD = M/E
	thetamax = np.pi/2.*0.8
	a = (l*E/2.*(thetamax**2 + thetaD**2))**2
	b = (l*E/2.*thetaD**2)**2
	sqrta = np.sqrt(a)
	sqrtb = np.sqrt(b)
	piece1 = np.array([( Li(2, -ib) - Li(2, -ia) )/2. for ia, ib in zip(a, b)])
	piece2 = 2.*np.log((1+b)/(1+a)) + 4.*(np.arctan(sqrtb)/sqrtb-np.arctan(sqrta)/sqrta)
	piece3 = 0.5*( (1+a)/a*np.log(1+a) - (1+b)/b*np.log(1+b))

	return (piece1 + piece2 + piece3)


folder = sys.argv[1]
M = 1.3
color = ['r', 'g', 'b']
# X-seciton
def plot22():
	def Xapprox(sqrts, T):
		return 1./(1. - M*M/sqrts/sqrts)**2/T/T
	def Rapprox(E, T):
		return T
	for c, fname in enumerate([folder+'/XQq2Qq.hdf5', folder+'/XQg2Qg.hdf5']):
		f = h5py.File(fname, 'r')
	
		NT = f['Xsection-tab'].attrs['N_T']
		TH = f['Xsection-tab'].attrs['T_high']
		TL = f['Xsection-tab'].attrs['T_low']
		Nsh = f['Xsection-tab'].attrs['N_sqrt']
		sH = f['Xsection-tab'].attrs['sqrts_high']
		sL = f['Xsection-tab'].attrs['sqrts_low']
	
		T = np.linspace(TL, TH, NT)
		sqrts = np.linspace(sL, sH, Nsh)
	
		X = f['Xsection-tab'].value
	
		for i, t in enumerate(T):
			#plt.plot(sqrts, X[:,i]*Xapprox(sqrts, t), color=color[c])
			plt.plot(sqrts, X[:,i], color=color[c])
		f.close()
	plt.show()
	
	for c, fname in enumerate([folder+'/RQq2Qq.hdf5', folder+'/RQg2Qg.hdf5']):
		f = h5py.File(fname, 'r')
	
		NT = f['Rates-tab'].attrs['N_T']
		TH = f['Rates-tab'].attrs['T_high']
		TL = f['Rates-tab'].attrs['T_low']
		NE = f['Rates-tab'].attrs['N_E1']
		EH = f['Rates-tab'].attrs['E1_high']
		EL = f['Rates-tab'].attrs['E1_low']
	
		T = np.linspace(TL, TH, NT)
		E = np.linspace(EL, EH, NE)
	
		R = f['Rates-tab'].value
	
		for i, t in enumerate(T):
			#plt.plot(E, R[:,i]*Rapprox(E, t), color=color[c])
			plt.plot(E, R[:,i], color=color[c])
		f.close()
	plt.show()
	
def plot23():
	def Xapprox(sqrts, T, dt):
		x = dt*4*T
		return x/(1.+x)/T/T*np.log(sqrts/M)
	def Rapprox(E, T, dt):
		x = dt*4*T
		return x/(1.+x)*T

	for c, fname in enumerate([folder+'/XQq2Qqg.hdf5', folder+'/XQg2Qgg.hdf5']):
		f = h5py.File(fname, 'r')
	
		NT = f['Xsection-tab'].attrs['N_T']
		TH = f['Xsection-tab'].attrs['T_high']
		TL = f['Xsection-tab'].attrs['T_low']
		Nsh = f['Xsection-tab'].attrs['N_sqrt_half']
		sH = f['Xsection-tab'].attrs['sqrts_high']
		sL = f['Xsection-tab'].attrs['sqrts_low']
		Ndt = f['Xsection-tab'].attrs['N_dt']
		dtH = f['Xsection-tab'].attrs['dt_high']
		dtL = f['Xsection-tab'].attrs['dt_low']
	
		T = np.linspace(TL, TH, NT)
		dt = np.linspace(dtL, dtH, Ndt)
		sqrts = np.linspace(sL, sH, Nsh)
	
		X = f['Xsection-tab'].value
	
		for idt, edt in enumerate(dt):
			plt.subplot(2,5,idt+1)
			for it, t in enumerate(T):
				#plt.plot(sqrts, X[:, it, idt]*Xapprox(sqrts, t, edt), color=color[c])
				plt.plot(sqrts, X[:, it, idt], color=color[c])
		f.close()
	plt.show()

	for c, fname in enumerate([folder+'/RQq2Qqg.hdf5', folder+'/RQg2Qgg.hdf5']):
		f = h5py.File(fname, 'r')
	
		NT = f['Rates-tab'].attrs['N_T']
		TH = f['Rates-tab'].attrs['T_high']
		TL = f['Rates-tab'].attrs['T_low']
		NE = f['Rates-tab'].attrs['N_E1']
		EH = f['Rates-tab'].attrs['E1_high']
		EL = f['Rates-tab'].attrs['E1_low']
		Ndt = f['Rates-tab'].attrs['N_dt']
		dtH = f['Rates-tab'].attrs['dt_high']
		dtL = f['Rates-tab'].attrs['dt_low']
	
		T = np.linspace(TL, TH, NT)
		E = np.linspace(EL, EH, NE)
		dt = np.linspace(dtL, dtH, Ndt)
		R = f['Rates-tab'].value
	
		for idt, edt in enumerate(dt):
			plt.subplot(4,5,idt+1)
			for it, t in enumerate(T):
				#plt.plot(E, R[:, it, idt]*Rapprox(E, t, edt), color=color[c])
				plt.plot(E, R[:, it, idt], color=color[c])
		f.close()
	plt.legend()
	plt.show()
	
def plot32():
	def Rapprox(E, T, dt):
		x = (dt*T)**0.5
		return x/(1.+x)*T
	
	for c, fname in enumerate([folder+'/XQqg2Qq.hdf5', folder+'/XQgg2Qg.hdf5']):
		f = h5py.File(fname, 'r')
	
		NT = f['Xsection-tab'].attrs['N_T']
		TH = f['Xsection-tab'].attrs['T_high']
		TL = f['Xsection-tab'].attrs['T_low']
		Nsh = f['Xsection-tab'].attrs['N_sqrt_half']
		sH = f['Xsection-tab'].attrs['sqrts_high']
		sL = f['Xsection-tab'].attrs['sqrts_low']
		Na1 = f['Xsection-tab'].attrs['N_a1']
		a1H = f['Xsection-tab'].attrs['a1_high']
		a1L = f['Xsection-tab'].attrs['a1_low']
		Na2 = f['Xsection-tab'].attrs['N_a2']
		a2H = f['Xsection-tab'].attrs['a2_high']
		a2L = f['Xsection-tab'].attrs['a2_low']
	
		T = np.linspace(TL, TH, NT)
		a1 = np.linspace(a1L, a1H, Na1)
		a2 = np.linspace(a2L, a2H, Na2)
		sqrts = np.linspace(sL, sH, Nsh)
	
		X = f['Xsection-tab'].value
	
		for ia1, ea1 in enumerate(a1[::2]):
			for ia2, ea2 in enumerate(a2[::2]):
				plt.subplot(10,10,ia1*10+ia2+1)
				for it, t in enumerate(T):
					plt.plot(sqrts, X[:, it, ia1, ia2], color=color[c])
		f.close()
	plt.show()
	
	for c, fname in enumerate([folder+'/RQqg2Qq.hdf5', folder+'/RQgg2Qg.hdf5']):
		f = h5py.File(fname, 'r')
	
		NT = f['Rates-tab'].attrs['N_T']
		TH = f['Rates-tab'].attrs['T_high']
		TL = f['Rates-tab'].attrs['T_low']
		NE = f['Rates-tab'].attrs['N_E1']
		EH = f['Rates-tab'].attrs['E1_high']
		EL = f['Rates-tab'].attrs['E1_low']
		Ndt = f['Rates-tab'].attrs['N_dt']
		dtH = f['Rates-tab'].attrs['dt_high']
		dtL = f['Rates-tab'].attrs['dt_low']
	
		T = np.linspace(TL, TH, NT)
		E = np.linspace(EL, EH, NE)
		dt = np.linspace(dtL, dtH, Ndt)
		R = f['Rates-tab'].value
	
		for idt, edt in enumerate(dt):
			plt.subplot(2,5,idt+1)
			for it, t in enumerate(T):
				#plt.plot(E, R[:, it, idt]*Rapprox(E, t, edt), color=color[c])
				plt.plot(E, R[:, it, idt], color=color[c])
		f.close()
	plt.legend()
	plt.show()
	
plot22()
plot23()	
plot32()
